===================== Express =====================

const express = require('express');

/* 
Most projects only use one app object(but they can use more)
the app object sets up configuration that listens for incomeing 
requests that are being routed from node to express and then route
those requests to different route handlers
*/
const app = express();

//route handler example
// other default handlers in express: get, post, put, delete, patch
app.get('/', (req, res) => { // the '/' tells express to watch for requests to this route
  res.send({hi: 'there'});
})

// Environment Variables - set in underlying runtime that node runs
// on top of
// look at underlying enviroment and check to see if it has
// a specific port it wants us to use - only works in production
// can include || that runs in development environment
// 5000 here refers to http://localhost:5000/
const PORT = process.env.PORT || 5000

// listen to port
app.listen(PORT); // run from terminal with: node index.js

===============================================================

===================== Heroku =====================

tell heroku which version of node to use in your package.json file

  "engines": {
    "node": "11.3.0",
    "npm": "6.5.0"
    },

specify start script in package.json
replace 
"test": "echo \"Error: no test specified\" && exit 1"

with
"start": "node index.js"

create gitignore so that node dependencies aren't sent to heroku,
heroku will install the dependencies on its own

create file calle .gitignore
inside .gitignore put the following line of text:

node_modules 

this will ignore all files in the node modules folder

-------- in terminal --------

git init
git add .
git commit -m "comment"

make sure heroku CLI is installed (if not download installer - 
search for heroku CLI on google)

heroku --version
heroku login
heroku create

you should see two links, the first identifies the name of your app
to heroku, the second link is the deployment target. The deployment
target is a git repository we can push our local server to. When you
push your project to this repository, heroku will start it up automatically

git remote add heroku "link that you want to use"

example of what link looks like:
https://git.heroku.com/thawing-citadel-84114.git

git push heroku master

heroku open

// opens your project in a new browser window
// example of how the link to the project will look
https://thawing-citadel-84114.herokuapp.com/


deployment in the future

===============================================================



